
/******************************************************************************
 *
 * !!!WARNING!!!
 *
 * This file is automatically generated. Do not edit this file directly.
 *
 * This file was generated using the twitch generation script, found in the
 * `scripts/twitch` directory of the repository.
 *
 *****************************************************************************/

import type { Twitch } from "../index";
import type { TokenId } from "../types";
import { z } from "zod";

export interface SendWhisperRequest {
  /**
   * The whisper message to send. The message must not be empty.  
   *   
   * The maximum message lengths are:  
   *   
   * * 500 characters if the user you're sending the message to hasn't
   * whispered you before.
   * * 10,000 characters if the user you're sending the message to has
   * whispered you before.
   *   
   * Messages that exceed the maximum length are truncated.
   */
  message: string,
  /**
   * The ID of the user to receive the whisper.
   */
  toUserId: string,
}


export class Whispers {
  readonly #twitch: Twitch;

  constructor(twitch: Twitch) {
    this.#twitch = twitch;
  }

  /**
   * Sends a whisper message to the specified user.
   * 
   * NOTE: The user sending the whisper must have a verified phone number (see
   * the **Phone Number** setting in your [Security and
   * Privacy](https://www.twitch.tv/settings/security) settings).
   * 
   * NOTE: The API may silently drop whispers that it suspects of violating
   * Twitch policies. (The API does not indicate that it dropped the whisper;
   * it returns a 204 status code as if it succeeded.)
   * 
   * **Rate Limits**: You may whisper to a maximum of 40 unique recipients per
   * day. Within the per day limit, you may whisper a maximum of 3 whispers per
   * second and a maximum of 100 whispers per minute.
   * 
   * __Authorization:__
   * 
   * Requires a [user access
   * token](https://dev.twitch.tv/docs/authentication#user-access-tokens) that
   * includes the **user:manage:whispers** scope.
   */
  async sendWhisper(options: SendWhisperRequest): Promise<void> {
    const snapshot = await this.#twitch.snapshot();
    const url = new URL("/whispers", this.#twitch.base);
    url.searchParams.append("to_user_id", options.toUserId.toString());
    url.searchParams.append("from_user_id", snapshot.userId);
    const opts: RequestInit = { method: 'POST' };

    const body: Record<string, unknown> = {};

    body.message = options.message;
    opts.body = JSON.stringify(body);
    await this.#twitch.request(url, opts);
  }
}
