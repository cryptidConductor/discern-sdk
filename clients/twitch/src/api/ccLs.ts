
/******************************************************************************
 *
 * !!!WARNING!!!
 *
 * This file is automatically generated. Do not edit this file directly.
 *
 * This file was generated using the twitch generation script, found in the
 * `scripts/twitch` directory of the repository.
 *
 *****************************************************************************/

import type { Twitch } from "../index";
import type { TokenId } from "../types";
import { z } from "zod";

export interface GetContentClassificationLabelsRequest {
  /**
   * Locale for the Content Classification Labels. You may specify a maximum of
   * 1 locale. Default: `“en-US”`  
   * Supported locales: `"bg-BG", "cs-CZ", "da-DK", "da-DK", "de-DE", "el-GR",
   * "en-GB", "en-US", "es-ES", "es-MX", "fi-FI", "fr-FR", "hu-HU", "it-IT",
   * "ja-JP", "ko-KR", "nl-NL", "no-NO", "pl-PL", "pt-BT", "pt-PT", "ro-RO",
   * "ru-RU", "sk-SK", "sv-SE", "th-TH", "tr-TR", "vi-VN", "zh-CN", "zh-TW"`
   */
  locale?: string,
}
export const GetContentClassificationLabelsResponse = z.object({
  /**
   * A list that contains information about the available content
   * classification labels.
   */
  "data": z.object({
    /**
     * Localized description of the CCL.
     */
    "description": z.string(),
    /**
     * Unique identifier for the CCL.
     */
    "id": z.string(),
    /**
     * Localized name of the CCL.
     */
    "name": z.string()
  }).array()
});
export interface GetContentClassificationLabelsResponse extends z.infer<typeof GetContentClassificationLabelsResponse> {}



export class CcLs {
  readonly #twitch: Twitch;

  constructor(twitch: Twitch) {
    this.#twitch = twitch;
  }

  /**
   * Gets information about Twitch content classification labels.
   * 
   * __Authorization:__
   * 
   * Requires an [app access
   * token](https://dev.twitch.tv/docs/authentication#app-access-tokens) or
   * [user access
   * token](https://dev.twitch.tv/docs/authentication#user-access-tokens).
   */
  async getContentClassificationLabels(options: GetContentClassificationLabelsRequest): Promise<GetContentClassificationLabelsResponse> {
    const snapshot = await this.#twitch.snapshot();
    const url = new URL("/content_classification_labels", this.#twitch.base);
    if (options.locale) {
      url.searchParams.append("locale", options.locale.toString());
    }
    const opts: RequestInit = { method: 'GET' };

    return await this.#twitch.request(url, opts, GetContentClassificationLabelsResponse);
  }
}
